
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://pkcwyzwgojpnvlessmjr.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InBrY3d5endnb2pwbnZsZXNzbWpyIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDc3NTMyMzgsImV4cCI6MjA2MzMyOTIzOH0.0Wh_sdIvIjQ8I-g1Ppq-cUjl3LuvdDoWSKj8sP61Pdo";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: localStorage,
    persistSession: true,
    autoRefreshToken: true,
  }
});

// Helper function to set widiahmadibnu@gmail.com as admin
export const setupSpecialAdmin = async () => {
  try {
    // First check if user is authenticated
    const { data: { user } } = await supabase.auth.getUser();
    
    if (!user) {
      console.log('User not authenticated yet');
      return;
    }
    
    // Look for the special email account
    if (user.email === 'widiahmadibnu@gmail.com') {
      // Check if already an admin
      const { data: existingRole } = await supabase
        .from('user_roles')
        .select('id')
        .eq('user_id', user.id)
        .eq('role', 'admin')
        .single();
        
      if (existingRole) {
        console.log('Already an admin');
        return;
      }
      
      // Insert admin role
      await supabase
        .from('user_roles')
        .insert({
          user_id: user.id,
          role: 'admin'
        });
      
      console.log('Admin role added for widiahmadibnu@gmail.com');
    }
  } catch (error) {
    console.error('Error setting up special admin:', error);
  }
};
